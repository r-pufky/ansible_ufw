---
- name: 'Config | query IPv6 support'
  ansible.builtin.command: 'sysctl --values net.ipv6.conf.all.disable_ipv6'
  register: _ufw_ipv6
  changed_when: false

- name: 'Config | enable'
  when: ufw_enable
  block:
    - name: 'Config | enable | disable IPv6 support'
      when: _ufw_ipv6.stdout | int == 1
      ansible.builtin.lineinfile:
        path: '/etc/default/ufw'
        regexp: '^IPV6=yes'
        line: 'IPV6=no'
        state: 'present'
      register: _ufw_config

    - name: 'Config | enable | enable IPv6 support'
      when: _ufw_ipv6.stdout | int == 0
      ansible.builtin.lineinfile:
        path: '/etc/default/ufw'
        regexp: '^IPV6=no'
        line: 'IPV6=yes'
        state: 'present'
      register: _ufw_config

    - name: 'Config | enable | reload for IP support changes'
      when: _ufw_config.changed  # noqa no-handler execute immediately
      community.general.ufw:
        state: 'reloaded'

    - name: 'Config | enable | purge existing configuration'
      when: ufw_purge
      community.general.ufw:
        state: 'reset'

    - name: 'Config | enable | disable for setup'
      when: ufw_disable_for_setup
      community.general.ufw:
        state: 'disabled'
      changed_when: false

    - name: 'Config | enable | set global logging'
      community.general.ufw:
        logging: '{{ ufw_logging | default(false) }}'

    - name: 'Config | enable | default allow outgoing connections'
      community.general.ufw:
        default: '{{ ufw_default_outgoing | default("allow") }}'
        direction: 'outgoing'

    - name: 'Config | enable | default deny incoming connections'
      community.general.ufw:
        default: '{{ ufw_default_incoming | default("deny") }}'
        direction: 'incoming'

    - name: 'Config | enable | set group rules'
      when: ufw_group
      community.general.ufw:
        direction: '{% if "direction" in item %}{{ item.direction }}{% else %}in{% endif %}'  # yamllint disable-line rule:line-length
        from_ip: '{% if "from_ip" in item %}{{ item.from_ip }}{% else %}any{% endif %}'  # yamllint disable-line rule:line-length
        from_port:
          '{% if "from_port" in item %}{{ item.from_port }}{% endif %}'
        to_ip:
          '{% if "to_ip" in item %}{{ item.to_ip }}{% else %}any{% endif %}'
        to_port: '{% if "to_port" in item %}{{ item.to_port }}{% endif %}'
        proto:
          '{% if "proto" in item %}{{ item.proto }}{% else %}tcp{% endif %}'
        log: '{% if "log" in item %}{{ item.log }}{% else %}false{% endif %}'
        comment: '{% if "comment" in item %}{{ item.comment }}{% else %}r_pufky.deb.ufw default group comment{% endif %}'  # yamllint disable-line rule:line-length
        rule: 'allow'
      loop: '{{ ufw_group }}'

    - name: 'Config | enable | set host rules'
      when: ufw_host
      community.general.ufw:
        direction: '{% if "direction" in item %}{{ item.direction }}{% else %}in{% endif %}'  # yamllint disable-line rule:line-length
        from_ip: '{% if "from_ip" in item %}{{ item.from_ip }}{% else %}any{% endif %}'  # yamllint disable-line rule:line-length
        from_port: '{% if "from_port" in item %}{{ item.from_port }}{% endif %}'
        to_ip:
          '{% if "to_ip" in item %}{{ item.to_ip }}{% else %}any{% endif %}'
        to_port: '{% if "to_port" in item %}{{ item.to_port }}{% endif %}'
        proto:
          '{% if "proto" in item %}{{ item.proto }}{% else %}tcp{% endif %}'
        log: '{% if "log" in item %}{{ item.log }}{% else %}false{% endif %}'
        comment: '{% if "comment" in item %}{{ item.comment }}{% else %}r_pufky.deb.ufw default host comment{% endif %}'  # yamllint disable-line rule:line-length
        rule: 'allow'
      loop: '{{ ufw_host }}'

    - name: 'Config | enable | enable post setup'
      when: ufw_disable_for_setup
      community.general.ufw:
        state: 'enabled'
      changed_when: false

- name: 'Config | disable'
  when: not ufw_enable
  community.general.ufw:
    state: 'disabled'
