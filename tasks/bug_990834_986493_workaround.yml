---
# yamllint disable rule:line-length
###############################################################################
# UFW Firewall Configuration
###############################################################################
# With specific network devices, such as wifi, UFW will fail to detect a
# network device during boot and infinitely pause booting until that device is
# found.
#
# This is a known issue and is resolved upstream, pending push to stable.
#
# TODO(deprecated): This has been patched in bookworm. Verify patched release
#     works and remove.
#
# Reference:
# * https://unix.stackexchange.com/questions/665144/ufw-not-allowing-to-boot-debian-11/675650

- name: 'Bug 990834 986493 workaround | set infinite boot timeout workaround'
  when: ufw_boot_timeout_workaround
  block:
    - name: 'Bug 990834 986493 workaround | remove default dependencies'
      ansible.builtin.lineinfile:
        path: '/lib/systemd/system/ufw.service'
        regexp: '^DefaultDependencies=.*$'
        line: '#DefaultDependencies=no'
        state: 'present'
      register: _ufw_boot_set_dependencies

    - name: 'Bug 990834 986493 workaround | use network before pre-target'
      ansible.builtin.lineinfile:
        path: '/lib/systemd/system/ufw.service'
        regexp: '^Before=network.target.*$'
        line: 'Before=network-pre.target'
        state: 'present'
      register: _ufw_boot_set_before

    - name: 'Bug 990834 986493 workaround | use network wants pre-target'
      ansible.builtin.lineinfile:
        path: '/lib/systemd/system/ufw.service'
        line: 'Wants=network-pre.target'
        insertafter: '^Before=network-pre.target.*$'
        state: 'present'
      register: _ufw_boot_set_wants

- name: 'Bug 990834 986493 workaround | remove infinite boot timeout workaround'
  when: not ufw_boot_timeout_workaround_unpatch
  block:
    - name: 'Bug 990834 986493 workaround | Set default dependencies'
      ansible.builtin.lineinfile:
        path: '/lib/systemd/system/ufw.service'
        regexp: '^#DefaultDependencies=no.*$'
        line: 'DefaultDependencies=no'
        state: 'present'
      register: _ufw_boot_remove_dependencies

    - name: 'Bug 990834 986493 workaround | use network target'
      ansible.builtin.lineinfile:
        path: '/lib/systemd/system/ufw.service'
        regexp: '^Before=network-pre.target.*$'
        state: 'absent'
      register: _ufw_boot_remove_before

    - name: 'Bug 990834 986493 workaround | use network target'
      ansible.builtin.lineinfile:
        path: '/lib/systemd/system/ufw.service'
        regexp: '^Wants=network-pre.target.*$'
        state: 'absent'
      register: _ufw_boot_remove_wants

- name: 'Bug 990834 986493 workaround | reload daemon with workaround settings'  # noqa no-handler keep workaround changes to one file.
  ansible.builtin.systemd:
    name: 'ufw'
    daemon_reload: true
  when: >
    _ufw_boot_set_dependencies.changed or
    _ufw_boot_set_before.changed or
    _ufw_boot_set_wants.changed or
    _ufw_boot_remove_dependencies.changed or
    _ufw_boot_remove_before.changed or
    _ufw_boot_remove_wants.changed
